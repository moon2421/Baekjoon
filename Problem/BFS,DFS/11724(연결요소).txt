#include <stdio.h>
#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <queue>
#include <cstring>
using namespace std;
vector <int>graph[1001];
bool check[1001];
queue <int>q;

void dfs(int start) {
	check[start] = true;//방문완료
	for (int i = 0; i < graph[start].size(); i++) {//그래프내부에 연결된 간선들
		int idx = graph[start][i];//연결된 인접간선찾음
		if (check[idx] == false) {//미방문이면
			dfs(idx);//방문
		}
	}

}

int main() {
	int N, M, V;
	cin >> N >> M;
	for (int i = 0; i < M; i++) {
		int a, b;
		cin >> a >> b;
		graph[a].push_back(b);
		graph[b].push_back(a);
	}
	int cnt = 0;
	for (int i = 1; i <= N;i++) {//총정점의개수만큼탐색
		if (check[i] == false) { //방문 x 방문
			dfs(i);
			cnt++;
		}
	}
	printf("%d", cnt);
	
	return 0;
}
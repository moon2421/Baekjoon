2차원 dp를 이용했씁니다
끝자리수가 0이오는경우와 1이오는경우로 나눴습니다.
예를들어
1000 1001 이있으면 

끌자리수가 0이오는경우엔 끝자리-1자리에는 1또는0둘다올수있습니다
그러나 끝자리수가 1이오는경우엔 끝자리-1자리에는 1만올수있습니다.






#include <cstdio>
#include <cstring>
#include <stack>
#include <queue>
#include <iostream>
using namespace std;
int dp[91][2];//끝수가0이오는경우 1이오는경우로나눔

int main() {
	int N;
	cin >> N;

	dp[1][0] = 0; //끝수가 0인경우 앞에는 1또는0이올수있음
	dp[1][1] = 1; //끝수가 1인경우 앞에는 1만올수있음
	dp[2][0] = 1;
	dp[2][1] = 0;


	for (int i = 3; i <= N; i++) {
		dp[i][0] = dp[i - 1][0] + dp[i - 1][1];
		dp[i][1] = dp[i - 1][0];
	}

	cout << dp[N][0]+dp[N][1]<<'\n';
	


}